@version: 3.25
@include "scl.conf"

options { 
	long_hostnames (off);
	sync(0);
	log_fifo_size(10);
	owner(splunk);
	group(splunk);
	perm(0644);
    use-dns(no);
	create_dirs(yes);
};

source s_local {
    system(); internal();
};
destination d_local {
    file("/var/log/messages");
};
log {
    source(s_local); destination(d_local);
};

###########
source s_udp_514 {
    network(ip(0.0.0.0) 
	port(514));
};
###########
source s_udp_5000 {
    network(
		ip(0.0.0.0) 
		port(5000)
		transport("udp")
 		);
};
destination d_5000 {
    file("/opt/log/IIS/IIS.log");
};
log {
    source(s_udp_5000); 
	destination(d_5000);
};
###########
source s_udp_5001 {
    network(
		ip(0.0.0.0) 
		port(5001)
		transport("udp")
		);
};
destination d_5001 {
    file("/opt/log/dhcp/dhcp.log");
};
log {
    source(s_udp_5001); 
	destination(d_5001);
};
###########
source s_udp_5002 {
    network(
		ip(0.0.0.0) 
		port(5002)
		transport("udp")
		);
};
destination d_5002 {
    file("/opt/log/dns/dns.log");
};
log {
    source(s_udp_5002); 
	destination(d_5002);
};
###########
source s_udp_5003 {
    network(
		ip(0.0.0.0) 
		port(5003)
		transport("udp")
		);
};
destination d_5003 {
    file("/opt/log/checkpoint/checkpoint.log");
};
log {
    source(s_udp_5003); 
	destination(d_5003);
};
###########
source s_udp_5004 {
    network(
		ip(0.0.0.0) 
		port(5004)
		transport("udp")
		);
};
destination d_5004 {
    file("/opt/log/proxySG/proxySG.log");
};
log {
    source(s_udp_5004); 
	destination(d_5004);
};
###########
source s_udp_5005 {
    network(
		ip(0.0.0.0) 
		port(5005)
		transport("udp")
		);
};
destination d_5005 {
    file("/opt/log/cisco.ise/cisco.ise.log");
};
log {
    source(s_udp_5005); 
	destination(d_5005);
};
###########
source s_udp_5006 {
    network(
		ip(0.0.0.0) 
		port(5006)
		transport("udp")
		);
};
destination d_5006 {
    file("/opt/log/o365.mgmt/o365.mgmt.log");
};
log {
    source(s_udp_5006); 
	destination(d_5006);
};
###########
source s_udp_5007 {
    network(
		ip(0.0.0.0) 
		port(5007)
		transport("udp")
		);
};
destination d_5007 {
    file("/opt/log/apache/apache.log");
};
log {
    source(s_udp_5007); 
	destination(d_5007);
};

#############
# 514 catch all
## use this with filters to sort syslog feeds from appliances that cannot send to unique ports

filter demo_filter { 
	host("example") 
	and match( "deny" value("MESSAGE") )
};
destination d_514 {
    file("/opt/log/default/syslog.log");
};
log {
    source(s_udp_514); 
#	filter(demo_filter);
	destination(d_514);
};
